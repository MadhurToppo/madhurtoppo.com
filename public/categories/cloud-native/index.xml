<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cloud-Native on Madhur Toppo</title>
    <link>https://madhurtoppo.com/categories/cloud-native/</link>
    <description>Recent content in Cloud-Native on Madhur Toppo</description>
    <generator>Hugo -- 0.151.2</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Oct 2025 16:24:36 +0200</lastBuildDate>
    <atom:link href="https://madhurtoppo.com/categories/cloud-native/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Observability and Monitoring</title>
      <link>https://madhurtoppo.com/posts/cloud-native/observability-and-monitoring/</link>
      <pubDate>Fri, 17 Oct 2025 16:24:36 +0200</pubDate>
      <guid>https://madhurtoppo.com/posts/cloud-native/observability-and-monitoring/</guid>
      <description>&lt;h1 id=&#34;observability-and-monitoring-in-modern-spring-boot-applications&#34;&gt;Observability and Monitoring in Modern Spring Boot Applications&lt;/h1&gt;
&lt;p&gt;Modern distributed systems are complex â€” dozens of services, asynchronous
communication, and dynamic scaling make understanding whatâ€™s happening inside
the system harder than ever. Thatâ€™s whereÂ &lt;strong&gt;Observability&lt;/strong&gt;Â andÂ &lt;strong&gt;Monitoring&lt;/strong&gt;
come in.&lt;/p&gt;
&lt;p&gt;WhileÂ &lt;strong&gt;Monitoring&lt;/strong&gt;Â tells usÂ &lt;em&gt;that&lt;/em&gt;Â something is wrong,Â &lt;strong&gt;Observability&lt;/strong&gt;Â helps
us understandÂ &lt;em&gt;why&lt;/em&gt;Â itâ€™s wrong. In a typical Spring Boot microservice setup,
observability involves 3 core pillars:&lt;/p&gt;
&lt;h2 id=&#34;-1-metrics--quantifying-system-health&#34;&gt;ðŸ§­ 1. Metrics â€” Quantifying System Health&lt;/h2&gt;
&lt;p&gt;Metrics give a numerical insights about system behavior â€” CPU usage, request latency, error rates, etc.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
